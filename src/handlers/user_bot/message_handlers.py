"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–Ω–æ–ø–æ–∫ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""

import logging
from telegram import Update
from telegram.ext import ContextTypes

from .task_list import my_tasks
from .base_handlers import help_command
from .keyboards import create_main_keyboard

logger = logging.getLogger(__name__)

async def handle_button_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–Ω–æ–ø–æ–∫"""
    message_text = update.message.text
    
    try:
        if message_text == "üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏":
            await my_tasks(update, context)
            
        # –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É "‚ûï –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞", —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å —ç—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ ConversationHandler
            
        elif message_text == "‚ùî –ü–æ–º–æ—â—å":
            await help_command(update, context)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏: {e}", exc_info=True)
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=create_main_keyboard()
        )