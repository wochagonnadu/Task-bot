"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –æ—Ç—á–µ—Ç–æ–≤"""

from datetime import datetime, timedelta
import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from src.services.excel import ExcelReportGenerator
from ..constants import (
    CALLBACK_REPORT_WEEK,
    CALLBACK_REPORT_MONTH,
    CALLBACK_REPORT_QUARTER,
    CALLBACK_REPORT_YEAR,
    REPORTS_MENU_MESSAGE,
    REPORT_PERIODS
)

logger = logging.getLogger(__name__)

async def handle_reports_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –æ—Ç—á–µ—Ç–æ–≤

    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegram –±–æ—Ç–∞
    """
    query = update.callback_query
    await query.answer()
    
    if query.data in [CALLBACK_REPORT_WEEK, CALLBACK_REPORT_MONTH, CALLBACK_REPORT_QUARTER, CALLBACK_REPORT_YEAR]:
        await generate_report(update, context, query.data.split('_')[1])
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
        keyboard = [
            [
                InlineKeyboardButton(
                    REPORT_PERIODS['week'],
                    callback_data=CALLBACK_REPORT_WEEK
                ),
                InlineKeyboardButton(
                    REPORT_PERIODS['month'],
                    callback_data=CALLBACK_REPORT_MONTH
                )
            ],
            [
                InlineKeyboardButton(
                    REPORT_PERIODS['quarter'],
                    callback_data=CALLBACK_REPORT_QUARTER
                ),
                InlineKeyboardButton(
                    REPORT_PERIODS['year'],
                    callback_data=CALLBACK_REPORT_YEAR
                )
            ]
        ]
        
        await query.message.edit_text(
            REPORTS_MENU_MESSAGE,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

async def generate_report(update: Update, context: ContextTypes.DEFAULT_TYPE, period: str) -> None:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥

    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegram –±–æ—Ç–∞
        period: –ü–µ—Ä–∏–æ–¥ (week/month/quarter/year)
    """
    query = update.callback_query
    
    try:
        # –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        await query.message.edit_text(
            f"üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ {REPORT_PERIODS[period].lower()}..."
        )
        
        # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤
        generator = ExcelReportGenerator()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        file_data = await generator.generate_report(period)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        await query.message.reply_document(
            document=file_data,
            filename=f"report_{period}_{datetime.now().strftime('%Y%m%d')}.xlsx",
            caption=f"üìä –û—Ç—á–µ—Ç {REPORT_PERIODS[period].lower()}"
        )
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
        keyboard = [
            [
                InlineKeyboardButton(
                    REPORT_PERIODS['week'],
                    callback_data=CALLBACK_REPORT_WEEK
                ),
                InlineKeyboardButton(
                    REPORT_PERIODS['month'],
                    callback_data=CALLBACK_REPORT_MONTH
                )
            ],
            [
                InlineKeyboardButton(
                    REPORT_PERIODS['quarter'],
                    callback_data=CALLBACK_REPORT_QUARTER
                ),
                InlineKeyboardButton(
                    REPORT_PERIODS['year'],
                    callback_data=CALLBACK_REPORT_YEAR
                )
            ]
        ]
        
        await query.message.edit_text(
            REPORTS_MENU_MESSAGE,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}", exc_info=True)
        await query.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )