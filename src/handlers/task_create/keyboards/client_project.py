"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –ø—Ä–æ–µ–∫—Ç–∞
"""
from typing import List, Dict

from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from ..constants import (
    CALLBACK_NEW_CLIENT,
    CALLBACK_SELECT_CLIENT,
    CALLBACK_NEW_PROJECT,
    CALLBACK_SELECT_PROJECT
)

def create_client_keyboard(clients: List[Dict[str, any]]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∫–Ω–æ–ø–∫–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ

    Args:
        clients: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ (id –∏ name)

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
    """
    keyboard = []
    row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ 2 –≤ —Ä—è–¥
    for client in clients:
        btn = InlineKeyboardButton(
            f"üë• {client['name']}",
            callback_data=f"{CALLBACK_SELECT_CLIENT}{client['id']}"
        )
        row.append(btn)
        if len(row) == 2:
            keyboard.append(row)
            row = []
    
    if row:  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –æ—Ç–º–µ–Ω—ã
    keyboard.extend([
        [
            InlineKeyboardButton(
                "‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞",
                callback_data=CALLBACK_NEW_CLIENT
            )
        ],
        [
            InlineKeyboardButton(
                "‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_task"
            )
        ]
    ])
    
    return InlineKeyboardMarkup(keyboard)

def create_project_keyboard(projects: List[Dict[str, any]]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∫–Ω–æ–ø–∫–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ

    Args:
        projects: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ (id –∏ name)

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤
    """
    keyboard = []
    row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –ø–æ 2 –≤ —Ä—è–¥
    for project in projects:
        btn = InlineKeyboardButton(
            f"üìÅ {project['name']}",
            callback_data=f"{CALLBACK_SELECT_PROJECT}{project['id']}"
        )
        row.append(btn)
        if len(row) == 2:
            keyboard.append(row)
            row = []
    
    if row:  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –æ—Ç–º–µ–Ω—ã
    keyboard.extend([
        [
            InlineKeyboardButton(
                "‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç",
                callback_data=CALLBACK_NEW_PROJECT
            )
        ],
        [
            InlineKeyboardButton(
                "‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_task"
            )
        ]
    ])
    
    return InlineKeyboardMarkup(keyboard)