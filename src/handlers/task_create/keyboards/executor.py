"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∑–∞–¥–∞—á–∏
"""
from typing import List, Dict
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

def create_executor_keyboard(executors: List[Dict[str, any]]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π '–û—Ç–º–µ–Ω–∞'

    Args:
        executors: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π {id: int, name: str}

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º–∏
    """
    keyboard = []
    row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –ø–æ 2 –≤ —Ä—è–¥
    for executor in executors:
        btn = InlineKeyboardButton(
            f"üë§ {executor['name']}",
            callback_data=f"select_executor_{executor['id']}"
        )
        row.append(btn)
        if len(row) == 2:
            keyboard.append(row)
            row = []
    
    if row:  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    keyboard.append([
        InlineKeyboardButton(
            "‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel_executor"
        )
    ])
    
    return InlineKeyboardMarkup(keyboard)